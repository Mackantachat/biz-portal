@using Resources = BizPortal.Resources
@using BizPortal.Utils.Extensions
@model ApplicationViewModel

@{
    string x = String.Empty;
}

<style type="text/css">
    .model-validate1 {
        display: none;
    }
</style>

@Html.Hidden("lsPEDJuristics", new { id = "lsPEDJuristics" })

<br/>
<div>
    @Html.Raw(Resources.Application.SP_EXTENDED_DATA_JURISTIC_TITLE)
    <button type="button" id="btnAddJuristicPED" class="btn btn-sm btn-primary pull-right" data-toggle="modal" data-target="#modalPEDJuristic" data-backdrop="static" data-keyboard="false">@Html.Raw(Resources.Application.PED_MODAL_ADD_TITLE)</button>
   </div>

<div>
    <table id="PEDJuristicTable" class="table table-striped table-bordered dataTable"></table>
</div>

<div class="modal fade" id="modalPEDJuristic" role="dialog" aria-labelledby="modalPEDJuristicLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="modalPEDJuristicLabel">@Html.Raw(Resources.Application.PAD_ADD_JURISTIC)</h4>
            </div>
            <div class="modal-body">
                <div id="frmPEDJuristic">

                    <div class="form-group">
                        <label for="txtPEDJuristic_LABEL" class="col-form-label">@Resources.Application.PED_LABEL:</label>
                        <input type="text" class="form-control" id="txtPEDJuristic_LABEL" placeholder="">
                        <span class="text-danger model-validate1">@Resources.Application.SP_VALIDATE_TEXT_VAL</span>

                    </div>

                    <div class="form-group">
                        <label for="inputGroupSelectTypeJuristic" class="col-form-label">@Resources.Application.PED_TYPE</label>
                        <select class="custom-select" id="inputGroupSelectTypeJuristic" disabled>
                            <option selected value="1">TEXT</option>
                            <option value="2">NUMBER</option>
                            <option value="3">DATE</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="txtPEDJuristic_VALUE" class="col-form-label"> @Resources.Application.PED_VALUE</label>
                        <input type="text" class="form-control" id="txtPEDJuristic_VALUE" placeholder="">
                      @*  <span class="text-danger model-validate1">@Resources.Application.SP_VALIDATE_TEXT_VAL</span>*@

                    </div>


                    <div class="form-group">
                        <label for="txtPEDJuristic_Mapping_Name" class="col-form-label"> @Resources.Application.PAD_MAPPING_NAME</label>
                        <input type="text" class="form-control" id="txtPEDJuristic_Mapping_Name" placeholder="">
                        <span class="text-danger model-validate1">@Resources.Application.SP_VALIDATE_TEXT_VAL</span>
                    </div>


                </div>

                <div class="modal-footer">
                    <button type="button" id="btnPEDJuristicCancel" class="btn btn-default" data-dismiss="modal">@Resources.Global.BTN_CANCEL</button>
                    <button type="button" id="btnPEDJuristicOK" class="btn btn-primary">@Resources.Global.BTN_OK</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    var dict = {
        1: "TEXT",
        2: "NUMBER",
        3: "DATE"
  // etc.
};
    var jsonDBPEDJuristic =  '@ViewBag.jsonPEDJuristics';
    var jsonStrPEDJuristic = '[]';
    var index_positionJuristic = 1;


    function initPaymentExtendDataJuristic() {
        var jsonInitPEDJuristic = jsonDBPEDJuristic.replace(/&quot;/g,'"');
        console.log(jsonInitPEDJuristic);

        var objPEDJuristic = JSON.parse(jsonInitPEDJuristic);
        //objPaymentExtendData.sort(function(a, b){ return a.Order - b.Order;});
        var objStrPEDJuristic = JSON.parse(jsonStrPEDJuristic);
        var j = 1;
         $.each(objPEDJuristic, function (i, item) {
            // coords.push({ 'Latitude': value, 'Longitude': longitudes[index] });
             objStrPEDJuristic.push({
                 "id":guid()
                 , "label": item.Label,"Name":item.Name, "type": item.Type,"typetxt": dict[item.Type], "value": item.Value ,"order": j++
             });
             jsonStrPEDJuristic = JSON.stringify(objStrPEDJuristic);
             console.log(jsonStrPEDJuristic);
           // alert(item.name);
         });
         dataTablePEDJuristic();
        //console.log(jsonStrPositons);

        var $modal = $('#modalPEDJuristic');

        $('#btnPEDJuristicOK', $modal).on('click', function () {
            //if (true) {
            //        updatePED($('#modalPED').attr('row-id'));
            //         $modal.modal('hide');
            //}
            if (validatePEDJuristic()) {

                        //alert(validateSPositions());
                        updatePEDJuristic($('#modalPEDJuristic').attr('row-id'));
                        $modal.modal('hide');
            }

        });



        function validatePEDJuristic(el) {

            var isValid = true;
            $('#frmPEDJuristic .form-group').each(function (i, e) {

                var $message1 = $(e).children('.model-validate1');
                //alert($message1);
                var val = $(e).children('input').val();

             //alert($(e).children('input').attr('id') );
                if ($(e).children('input').attr('id') != "txtPEDJuristic_VALUE") {


                    if ($(e).children('input').attr('type') == "text") {
                        if (val == undefined || val == 'undefined' || val == null || val == '' || val == 0 || val == -1) {
                            $message1.show();
                            isValid = false;
                        }
                        else {
                            $message1.hide();
                        }

                    }
                }

            });

           // alert(isValid);

            return isValid;
        }




        $modal.on('hide.bs.modal', function () {
            $modal.find('.modal-title').text('@Html.Raw(Resources.Application.PAD_ADD_JURISTIC)');
             $('#modalPEDJuristic').removeAttr('row-id');



                $('#txtPEDJuristic_LABEL', $modal).val('');
                //$('#inputGroupSelectType', $modal).val('');
                $('#txtPEDJuristic_VALUE', $modal).val('');

                $('#txtPEDJuristic_Mapping_Name', $modal).val('');

               // $('.model-validate').hide();
        });
    }

    function updatePEDJuristic(id) {

        var label  = $('#txtPEDJuristic_LABEL').val();
        var type = $('#inputGroupSelectTypeJuristic').val();
        var value  = $('#txtPEDJuristic_VALUE').val();
        var Name = $('#txtPEDJuristic_Mapping_Name').val();

        var obj = JSON.parse(jsonStrPEDJuristic);

        console.log("id " + id);

        if (id) {
                 for (var i = 0; i < obj.length; i++) {
            // look for the entry with a matching `code` value
            if (obj[i].order == id) {


              //  alert(dict[type]);

                obj[i].label = label;
                obj[i].type = type;
                obj[i].value = value;
                obj[i].typetxt = dict[type];
                obj[i].Name = Name;
               break;

            }
         }
        }
        else {
            console.log("positions obj push length" + obj.length);

            if (obj.length > 0) {
                //console.log(obj[0].order);
                //for (var j = 0; j < obj.length; j++) {
                //     index = obj[j].order;
                //}
                index_position = obj.length + 1;
                parseInt(index_position)
            }
            else {
                index_position = 1;
                index_position = obj.length + 1;
                parseInt(index_position)
            }

            obj.push({ "order": parseInt(index_position), "id": guid(), "label": label, "value": value, "type": type, "typetxt": dict[type], "Name": Name});
        }


        jsonStrPEDJuristic = JSON.stringify(obj);



            //index++;
            console.log("json" + jsonStrPEDJuristic);
            dataTablePEDJuristic();

        }
    function dataTablePEDJuristic() {

        var obj = JSON.parse(jsonStrPEDJuristic);
      //  document.getElementById('CountSigningPositions').value = obj.length;
       // alert( document.getElementById('CountSigningPositions').value);
          var PEDJuristic = [];
        $.each(obj, function (i, item) {
            // coords.push({ 'Latitude': value, 'Longitude': longitudes[index] });
            PEDJuristic.push({  'Label': item.label, 'Type': item.type, 'Value': item.value ,'Name':item.Name,'UserType':1});

           // alert(item.name);
        });

        var jsonPEDJuristic = JSON.stringify(PEDJuristic);

        //console.log(jsonSingPositions);
        $("#lsPEDJuristics").val(jsonPEDJuristic);
        console.log(JSON.parse(jsonStrPEDJuristic));
             var table = $('#PEDJuristicTable').DataTable({
             paging: false,
           searching: false,
            destroy: true,
		data: JSON.parse(jsonStrPEDJuristic),
		columns: [
			{
				name: 'order',
				title:  '@Html.Raw(Resources.Application.SP_INDEX)',
				data: 'order',
                sortable: false,
                 className: "text-center",
                width : "15px"
			},
			{
				name: 'order',
				data: 'order',
				visible: false
            }
            ,
			{
				name: 'id',
				data: 'id',
				visible: false
			},
               {
				name: 'label',
				data: 'label',
				title: '@Resources.Application.PED_LABEL',
				searchable: true,
                   sortable: false,
                 className: "text-center",
                width : "15px"
            },
                 {
				name: 'type',
				data: 'type',
                 visible: false,
            },
                 {
				name: 'typetxt',
				data: 'typetxt',
				title: '@Resources.Application.PED_TYPE',
				searchable: true,
                     sortable: false,
                 className: "text-center",
                width : "15px"
            }
            ,
                   {
				name: 'value',
				data: 'value',
				title: '@Resources.Application.PED_VALUE',
				searchable: true,
                       sortable: false,
                 className: "text-center",
                width : "15px"
            },
            {
				name: 'Name',
				data: 'Name',
				title: '@Resources.Application.PAD_MAPPING_NAME',
				searchable: true,
                       sortable: false,
                 className: "text-center",
                width : "15px"
            },
            {
				name: 'actionButton',
				data: null,
				title: '@Resources.Application.SP_ACTION_BUTTON',
				searchable: false,
                sortable: false,
                width: "5px",
                render: function (data, type, full, meta) {
					if (type === 'display') {
						var $span = $('<span></span>');
						$('<button type="button" class="btn btn-sm btn-warning" onClick="editPEDJuristic(\'' + data.order + '\')" > @Html.Raw(Resources.Global.BTN_EDIT)</button>').appendTo($span);
						$('<button type="button" class="btn btn-sm btn-danger"  onClick="deletePEDJuristic(\'' + data.order + '\')" > @Html.Raw(Resources.Global.BTN_DELETE)</button>').appendTo($span);
						return $span.html();
					}
					return data;
				}
			}
		]
	});






    }
    function editPEDJuristic(id) {
           console.log(id);
        var $modal = $('#modalPEDJuristic');
        $modal.modal({backdrop: 'static', keyboard: false})
        $modal.find('.modal-title').text('@Html.Raw(Resources.Application.PAD_EDIT_JURISTIC)')
       // var $row = $(el).parent('td').parent('tr');
         var obj = JSON.parse(jsonStrPEDJuristic);
         for (var i = 0; i < obj.length; i++){
  // look for the entry with a matching `code` value
             if (obj[i].order == id) {
                 // we found it
                 // obj[i].name is the matched result
                 $modal.attr('row-id', obj[i].order);

                 $('#txtPEDJuristic_LABEL', $modal).val(obj[i].label);
                 $('#inputGroupSelectTypeJuristic', $modal).val(obj[i].type);
                 $('#txtPEDJuristic_VALUE', $modal).val(obj[i].value);
                 $('#txtPEDJuristic_Mapping_Name', $modal).val(obj[i].Name);
             }
             else {
                 console.log(obj);
             }
}

        $modal.modal('show');
    }
    function deletePEDJuristic(id) {

        console.log(id);
        var obj = JSON.parse(jsonStrPEDJuristic);

        const index = obj.findIndex(x => x.order === parseInt(id));
            console.log(index);
        if (index !== undefined) obj.splice(index, 1);
        //console.log("After removal:Obj", obj);
        obj.sort((a, b) => (a.order > b.order) ? 1 : -1)
        jsonStrPEDJuristic = JSON.stringify(obj);
        //console.log("After removal:", jsonStr);
        //dataTable();



        var objUpdate = JSON.parse(jsonStrPEDJuristic);
        num = 0;
        $('#PEDJuristicTable > tbody  > tr').each(function (row_index, tr) {
            var $tds = $(this).find('td');

            tdOrder = $tds.eq(0).text();
           // alert(tdOrder);
           // console.log("Index- " + row_index + '-' + ID_Card);
            Objindex = objUpdate.findIndex(x => x.order === parseInt(tdOrder));
            if (Objindex >= 0) {
                console.log('old:' + num);
                num = num + 1;
                $tds.eq(0).text(num)
                console.log("row_index:" + num + "-idcard:" + objUpdate[Objindex].idcard);
            //    console.log("row_index: " + row_index + '-idcard:' + ID_Card);
                objUpdate[Objindex].order = parseInt(num);

                console.log(objUpdate);

            }


            objUpdate.sort((a, b) => (a.order > b.order) ? 1 : -1)
            jsonStrPEDJuristic = JSON.stringify(objUpdate);
            console.log("After removal:", jsonStrPEDJuristic
            );


        });

             dataTablePEDJuristic();

    }



</script>
