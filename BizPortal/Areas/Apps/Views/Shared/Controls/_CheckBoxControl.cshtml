@using BizPortal.DAL.MongoDB
@using BizPortal.ViewModels.ControlData
@using BizPortal.Utils.Helpers
@model FormControl

@{
    var textBold = string.Empty;
    if (Model.CheckboxTextBold)
    {
        textBold = "style=font-weight:bold;";
    }

}

@if (Model.DisplayCheckboxInline)
{
    if (Model.CheckboxName.Count() > 3)
    {
        for (int i = 0; i < Model.CheckboxName.Length; i++)
        {
            if (i % 3 == 0)
            {
                @Html.Raw("<div class=\"row\">");
            }
                <div class="col-md-4">
                    <div class="checkbox">
                        <label for="@string.Format("{0}_{1}", Model.ClientID, Model.CheckboxName[i])">
                            <input type="checkbox"
                                    name="@string.Format("{0}_{1}", Model.DataKey, Model.CheckboxName[i])"
                                    id="@string.Format("{0}_{1}", Model.ClientID, Model.CheckboxName[i])"
                                    class="trigger-checkbox"
                                    data-control-name="@Model.Control"
                                    data-control-value="@Model.CheckboxName[i]"
                                    @if (Model.CheckboxConfigs != null)
                                    {
                                        if (Model.CheckboxConfigs.CheckMin)
                                        {
                                            <Text> data-min=@Model.CheckboxConfigs.Min</Text>
                                        }
                                        if (Model.CheckboxConfigs.CheckMax)
                                        {
                                            <Text> data-max=@Model.CheckboxConfigs.Max</Text>
                                        }
                                    }
                                    value="true" />
                            @Html.Raw(ResourceHelper.GetResourceWordWithDefault(Model.CheckboxName[i], StringHelper.DefaultIfEmpty(Model.ResourceName, "Apps_SingleForm"), Model.CheckboxName[i]))
                        </label>
                    </div>
                </div>
            if ((i % 3 == 2) || (i == Model.CheckboxName.Length - 1))
            {        
                @Html.Raw("</div>");
            }
        }
    }
    @*if (Model.CheckboxName.Count() > 3)
    {
        <div class="row">
            @foreach (var item in Model.CheckboxName)
            {
                <div class="col-md-4">
                    <div class="checkbox">
                        <label for="@string.Format("{0}_{1}", Model.ClientID, item)">
                            <input type="checkbox" 
                                   name="@string.Format("{0}_{1}", Model.DataKey, item)" 
                                   id="@string.Format("{0}_{1}", Model.ClientID, item)" 
                                   class="trigger-checkbox"
                                   data-control-name="@Model.Control"
                                   data-control-value="@item"
                                   @if (Model.CheckboxConfigs != null)
                                   {
                                       if (Model.CheckboxConfigs.CheckMin) {
                                           <Text>data-min = @Model.CheckboxConfigs.Min</Text>
                                       }
                                       if (Model.CheckboxConfigs.CheckMax) {
                                           <Text>data-max = @Model.CheckboxConfigs.Max</Text>
                                       }
                                   }
                                   value="true" />
                            @Html.Raw(ResourceHelper.GetResourceWordWithDefault(item, StringHelper.DefaultIfEmpty(Model.ResourceName, "Apps_SingleForm"), item))
                        </label>
                    </div>
                </div>
            }
        </div>
    }*@
    else
    {
        var cols = Model.CheckboxName.Count();
        double maxCols = 12;
        int colLen = (int)Math.Ceiling(maxCols / cols);

        <div class="row">
            @foreach (var item in Model.CheckboxName)
            {
                <div class="col-md-@colLen">
                    <div class="checkbox">
                        <label for="@string.Format("{0}_{1}", Model.ClientID, item)">
                            <input type="checkbox" 
                                   name="@string.Format("{0}_{1}", Model.DataKey, item)"
                                   id="@string.Format("{0}_{1}", Model.ClientID, item)" 
                                   class="trigger-checkbox"
                                   data-control-name="@Model.Control"
                                   data-control-value="@item"
                                   @if (Model.CheckboxConfigs != null)
                                   {
                                       if (Model.CheckboxConfigs.CheckMin) {
                                           <Text>data-min = @Model.CheckboxConfigs.Min</Text>
                                       }
                                       if (Model.CheckboxConfigs.CheckMax) {
                                           <Text>data-max = @Model.CheckboxConfigs.Max</Text>
                                       }
                                   }
                                   value="true" />
                            @Html.Raw(ResourceHelper.GetResourceWordWithDefault(item, StringHelper.DefaultIfEmpty(Model.ResourceName, "Apps_SingleForm"), item))
                        </label>
                    </div>
                </div>
            }
        </div>
    }
}
else
{
    foreach (var item in Model.CheckboxName)
    {
        if (Model.CheckboxTextBold)
        {

        }
        <div class="checkbox" data-control-name="@Model.Control">
            <label for="@string.Format("{0}_{1}", Model.ClientID, item)" @textBold>
                <input type="checkbox"
                       name="@string.Format("{0}_{1}", Model.DataKey, item)"
                       id="@string.Format("{0}_{1}", Model.ClientID, item)"
                       class="trigger-checkbox"
                       data-control-name="@Model.Control"
                       data-control-value="@item"
                       @if (Model.CheckboxConfigs != null)
                       {
                           if (Model.CheckboxConfigs.CheckMin) {
                               <Text>data-min = @Model.CheckboxConfigs.Min</Text>
                           }
                           if (Model.CheckboxConfigs.CheckMax) {
                               <Text>data-max = @Model.CheckboxConfigs.Max</Text>
                           }
                       }
                       @if(Model.DisplayReadonly)
                       {
                            <Text>
                            disabled
                            </Text>
                       }
                       value="true" />
                @Html.Raw(ResourceHelper.GetResourceWordWithDefault(item, StringHelper.DefaultIfEmpty(Model.ResourceName, "Apps_SingleForm"), item))
            </label>
        </div>
    }
    <div id="@string.Format("{0}_{1}", Model.DataKey, "ShowError")"></div>
}



