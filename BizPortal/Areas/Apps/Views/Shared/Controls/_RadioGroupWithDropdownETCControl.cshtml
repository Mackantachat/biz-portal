@using BizPortal.DAL.MongoDB
@using BizPortal.ViewModels.ControlData
@using BizPortal.Utils.Helpers

@model FormControl

@foreach (var radioBtn in Model.RadioGroupWithDropdown.RadioButtons)
{
    if (radioBtn.RadioWithDropdown)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="form-inline">
                    <div class="form-group">
                        @Html.RadioButton(Model.RadioGroupWithDropdown.RadioGroupName, radioBtn.RadioButtonValue, new { id = string.Format("{0}-{1}", Model.RadioGroupWithDropdown.RadioGroupName, radioBtn.RadioButtonValue) })
                        @if (!radioBtn.NoRadioButtonText)
                        {
                            <label for="@string.Format("{0}-{1}", Model.RadioGroupWithDropdown.RadioGroupName, radioBtn.RadioButtonValue)" class="control-label">@ResourceHelper.GetResourceWordWithDefault(radioBtn.RadioButtonText, "Apps_SingleForm", radioBtn.RadioButtonText)</label>
                        }
                    </div>
                    @foreach (var dropdown in radioBtn.DropdownOpt)
                    {
                        <div class="form-group" style="width: calc(100% - 20px)">
                            <select class="form-control" id="@string.Format("dropdown_{0}_{1}", dropdown.DropdownName, Model.ClientID)" name="@string.Format("DROPDOWN_{0}_{1}_{2}", dropdown.DropdownName, radioBtn.RadioButtonValue, Model.DataKey)" disabled>
                                <option></option>
                            </select>
                        </div>
                        <input type="hidden" id="@string.Format("dropdown_{0}_{1}_TEXT", dropdown.DropdownName, Model.ClientID)" name="@string.Format("DROPDOWN_{0}_{1}_{2}_TEXT", dropdown.DropdownName, radioBtn.RadioButtonValue, Model.DataKey)" value="" />
                    }
                </div>
            </div>
        </div>
    }
}
<div class="row">
    <div class="col-md-12">
        <div class="form-inline">
            <div class="form-group">
                @Html.RadioButton(Model.RadioGroupWithDropdown.RadioGroupName, "OTHER", new { id = string.Format("{0}-OTHER", Model.RadioGroupWithDropdown.RadioGroupName) })
                <label for="@string.Format("{0}-OTHER", Model.RadioGroupWithDropdown.RadioGroupName)" class="control-label">@ResourceHelper.GetResourceWordWithDefault("OTHER", "Apps_SingleForm", "OTHER")</label>
            </div>
            <div class="form-group" style="width: calc(100% - 55px)">
                <input class="form-control" type="text" id="@string.Format("{0}-OTHER", Model.RadioGroupWithDropdown.RadioGroupName)" name="@string.Format("{0}_OTHER_TEXT", Model.RadioGroupWithDropdown.RadioGroupName)" style="width:100%" disabled>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        @foreach (var radioBtn in Model.RadioGroupWithDropdown.RadioButtons)
        {
            if (radioBtn.RadioWithDropdown)
            {
                foreach (var dropdown in radioBtn.DropdownOpt)
                {
                <text>
        $("#@string.Format("dropdown_{0}_{1}", dropdown.DropdownName, Model.ClientID)").select2({
            data: @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(dropdown.Select2Opt)),
            allowClear: true,
            width: '100%'
        });

        $('#@string.Format("dropdown_{0}_{1}", dropdown.DropdownName, Model.ClientID)').on('select2:select', function (e) {
            var data = e.params.data;
            $('#@string.Format("dropdown_{0}_{1}_TEXT", dropdown.DropdownName, Model.ClientID)').val(data.text);
        });

        singleForm.customRules['@string.Format("DROPDOWN_{0}_{1}_{2}", dropdown.DropdownName, radioBtn.RadioButtonValue, Model.DataKey)'] = {
            customrequiredif: { dependentproperty: '@Model.RadioGroupWithDropdown.RadioGroupName', targetvalue: '@radioBtn.RadioButtonValue' }, messages: { customrequiredif: 'กรุณาเลือก' }
        };
        </text>
                }
            }
        }

        $("input[type=text][name*=@Model.RadioGroupWithDropdown.RadioGroupName]").closest('form').on("hidden.bs.modal", function () {
            $("input[type=text][name*=@Model.RadioGroupWithDropdown.RadioGroupName]").prop('disabled', true);
            $("select[name*=@Model.RadioGroupWithDropdown.RadioGroupName]").select2().enable(false);
        });

        singleForm.customRules['@string.Format("{0}_OTHER_TEXT", Model.RadioGroupWithDropdown.RadioGroupName)'] = {
            customrequiredif: { dependentproperty: '@Model.RadioGroupWithDropdown.RadioGroupName', targetvalue: 'OTHER' }, messages: { customrequiredif: 'กรุณากรอกอื่นๆ' }
        };

        $("input[type=radio][name=@Model.RadioGroupWithDropdown.RadioGroupName]").on('change', function () {
            var value = $("input[type=radio][name=@Model.RadioGroupWithDropdown.RadioGroupName]:checked").val();
            $("select[name*=@Model.RadioGroupWithDropdown.RadioGroupName]").val("").trigger("change");
            $("select[name*=@Model.RadioGroupWithDropdown.RadioGroupName]").select2().enable(false);
            $("select[name*=" + value + "_@Model.DataKey]").select2().enable(true);

            $("input[type=text][name*=@Model.RadioGroupWithDropdown.RadioGroupName]").val("");
            $("input[type=text][name*=@Model.RadioGroupWithDropdown.RadioGroupName]").prop('disabled', true);
            $("input[type=text][name=@Model.RadioGroupWithDropdown.RadioGroupName" + "_" + value + "_TEXT]").prop('disabled', false);
        });
    });
</script>